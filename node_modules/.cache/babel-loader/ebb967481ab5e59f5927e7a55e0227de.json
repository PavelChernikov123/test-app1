{"ast":null,"code":"const dataLoaded = data => {\n  return {\n    type: 'FETCH_DATA_SUCCESS',\n    payload: data\n  };\n};\n\nconst dataRequested = () => {\n  return {\n    type: 'FETCH_DATA'\n  };\n};\n\nconst dataError = () => {\n  return {\n    type: 'FETCH_DATA_ERROR'\n  };\n};\n\nconst onMove = props => {\n  return {\n    type: 'MOVE_ITEM',\n    payload: props\n  };\n};\n\nconst fetchData = (dataService, dispatch) => () => {\n  dispatch(dataRequested());\n  dataService.getData().then(data => dispatch(dataLoaded(data))).catch(err => dispatch(dataError(err)));\n};\n\nexport { fetchData, onMove };","map":{"version":3,"sources":["C:/React-apps/test-app/test-app/src/actions/index.js"],"names":["dataLoaded","data","type","payload","dataRequested","dataError","onMove","props","fetchData","dataService","dispatch","getData","then","catch","err"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,IAAD,IAAU;AACzB,SAAO;AACHC,IAAAA,IAAI,EAAE,oBADH;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMG,aAAa,GAAG,MAAM;AACxB,SAAO;AACHF,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMG,SAAS,GAAG,MAAM;AACpB,SAAO;AACHH,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMI,MAAM,GAAGC,KAAK,IAAI;AACpB,SAAO;AACHL,IAAAA,IAAI,EAAE,WADH;AAEHC,IAAAA,OAAO,EAAEI;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMC,SAAS,GAAG,CAACC,WAAD,EAAcC,QAAd,KAA2B,MAAM;AAC/CA,EAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;AACAK,EAAAA,WAAW,CAACE,OAAZ,GACKC,IADL,CACWX,IAAD,IAAUS,QAAQ,CAACV,UAAU,CAACC,IAAD,CAAX,CAD5B,EAEKY,KAFL,CAEYC,GAAD,IAASJ,QAAQ,CAACL,SAAS,CAACS,GAAD,CAAV,CAF5B;AAGH,CALD;;AAOA,SACIN,SADJ,EAEIF,MAFJ","sourcesContent":["const dataLoaded = (data) => {\r\n    return {\r\n        type: 'FETCH_DATA_SUCCESS',\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst dataRequested = () => {\r\n    return {\r\n        type: 'FETCH_DATA'\r\n    }\r\n}\r\n\r\nconst dataError = () => {\r\n    return {\r\n        type: 'FETCH_DATA_ERROR'\r\n    }\r\n}\r\n\r\nconst onMove = props => {\r\n    return {\r\n        type: 'MOVE_ITEM',\r\n        payload: props\r\n    }\r\n}\r\n\r\nconst fetchData = (dataService, dispatch) => () => {\r\n    dispatch(dataRequested())\r\n    dataService.getData()\r\n        .then((data) => dispatch(dataLoaded(data)))\r\n        .catch((err) => dispatch(dataError(err)))\r\n}\r\n\r\nexport {\r\n    fetchData,\r\n    onMove\r\n}"]},"metadata":{},"sourceType":"module"}