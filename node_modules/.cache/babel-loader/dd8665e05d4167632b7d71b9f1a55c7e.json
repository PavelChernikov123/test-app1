{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-apps\\\\test-app\\\\test-app\\\\src\\\\components\\\\app\\\\app.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport AppHeader from '../header';\nimport TabControl from '../tab-control';\nimport Grid from '../grid';\nimport { connect } from 'react-redux';\nimport { withDataService } from '../hoc';\nimport { fetchData, onMove, onMoveGroup } from '../../actions';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onMove = (id, key, direction) => {\n      const idx = this.keys().findIndex(item => item === key);\n      const to = this.keys()[idx + direction];\n      this.props.onMove({\n        id,\n        from: key,\n        to\n      });\n    };\n\n    this.onMoveGroup = (ids, key, direction) => {\n      const idx = this.keys().findIndex(item => item === key);\n      const to = this.keys()[idx + direction];\n      this.props.onMoveGroup({\n        ids,\n        from: key,\n        to\n      });\n    };\n\n    this.keys = () => Object.keys(this.props.data);\n  }\n\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  render() {\n    const data = this.props.data;\n    const elements = this.keys().map((key, index) => {\n      const first = index === 0;\n      const last = index === this.keys().length - 1;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        onMove: this.onMove,\n        onMoveGroup: this.onMoveGroup,\n        items: data[key],\n        keyName: key,\n        first: first,\n        last: last\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this);\n    });\n    const routes = this.keys().map((key, index) => {\n      const first = index === 0;\n      const last = index === this.keys().length - 1;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: `/${key}`,\n        exact: true,\n        render: () => /*#__PURE__*/_jsxDEV(Grid, {\n          onMove: this.onMove,\n          onMoveGroup: this.onMoveGroup,\n          items: data[key],\n          keyName: key,\n          first: first,\n          last: last\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 78\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 24\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TabControl, {\n            data: this.keys()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: routes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({ ...props\n}) => ({ ...props\n});\n\nconst mapDispatchtoProps = (dispatch, {\n  dataService\n}) => ({\n  fetchData: fetchData(dataService, dispatch),\n  onMove: props => dispatch(onMove(props)),\n  onMoveGroup: props => dispatch(onMoveGroup(props))\n});\n\nexport default withDataService()(connect(mapStateToProps, mapDispatchtoProps)(App));","map":{"version":3,"sources":["C:/React-apps/test-app/test-app/src/components/app/app.js"],"names":["React","Component","BrowserRouter","Router","Route","AppHeader","TabControl","Grid","connect","withDataService","fetchData","onMove","onMoveGroup","App","id","key","direction","idx","keys","findIndex","item","to","props","from","ids","Object","data","componentDidMount","render","elements","map","index","first","last","length","routes","mapStateToProps","mapDispatchtoProps","dispatch","dataService"],"mappings":"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","sourcesContent":["import React, { Component }               from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport AppHeader                          from '../header'\r\nimport TabControl                         from '../tab-control'\r\nimport Grid                               from '../grid'\r\nimport { connect }                        from 'react-redux'\r\nimport { withDataService }                from '../hoc'\r\nimport { fetchData, onMove, onMoveGroup } from '../../actions'\r\nimport './app.css'\r\n\r\n\r\n\r\n class App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchData()\r\n  }\r\n    onMove = (id, key, direction) => {\r\n      const idx = this.keys().findIndex(item => item === key)\r\n      const to = this.keys()[idx+direction]\r\n      this.props.onMove({id, from:key, to}) \r\n    }\r\n\r\n    onMoveGroup = (ids, key, direction) => {\r\n      const idx = this.keys().findIndex(item => item === key)\r\n      const to = this.keys()[idx+direction]\r\n      this.props.onMoveGroup({ids, from:key, to})     \r\n  }\r\n    \r\n    \r\n    keys = () => (Object.keys(this.props.data))\r\n    \r\n    render() {\r\n        const data = this.props.data\r\n        const elements = this.keys().map((key, index) => {\r\n            const first = index === 0\r\n            const last = index === this.keys().length -1\r\n\r\n            return (\r\n                \r\n                <Grid \r\n                    onMove={this.onMove}\r\n                    onMoveGroup = {this.onMoveGroup}\r\n                    items= {data[key]}\r\n                    key={key}\r\n                    keyName = {key}\r\n                    first = {first}\r\n                    last = {last}/>\r\n            )\r\n          })\r\n\r\n          const routes = this.keys().map((key, index) => {\r\n                const first = index === 0\r\n                const last = index === this.keys().length -1\r\n                \r\n                return <Route path={`/${key}`} exact key={key} render={() => <Grid \r\n                    onMove={this.onMove}\r\n                    onMoveGroup={this.onMoveGroup}\r\n                    items= {data[key]}\r\n                    key={key}\r\n                    keyName = {key}\r\n                    first = {first}\r\n                    last = {last}/>} />\r\n\r\n          })\r\n\r\n        \r\n        return  (\r\n        <div>\r\n         <AppHeader/>\r\n          <div className=\"row\">{elements}</div>  \r\n          <Router>\r\n            <div>\r\n                <TabControl data={this.keys()}></TabControl>\r\n                <div className=\"row\">{routes}</div>\r\n            </div> \r\n          </Router>\r\n        </div>\r\n        )\r\n          \r\n      }\r\n}\r\n\r\nconst mapStateToProps = ({...props}) => ({...props})\r\nconst mapDispatchtoProps = (dispatch, { dataService }) =>  (\r\n    {\r\n        fetchData: fetchData(dataService, dispatch),\r\n        onMove: props => dispatch(onMove(props)),\r\n        onMoveGroup: props => dispatch(onMoveGroup(props))\r\n    }\r\n)\r\n\r\nexport default withDataService()(connect(mapStateToProps, mapDispatchtoProps)(App))"]},"metadata":{},"sourceType":"module"}