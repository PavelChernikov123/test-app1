{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-apps\\\\test-app\\\\test-app\\\\src\\\\components\\\\app\\\\app.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport DataService from '../../services/data-service';\nimport AppHeader from '../header/header';\nimport Grid from '../grid/grid';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.dataService = new DataService();\n    this.state = this.dataService.getData();\n\n    this.onMove = (id, key, direction) => {\n      let currentItem;\n      this.setState(state => {\n        const idx = state[key].findIndex(item => item.id === id);\n        currentItem = state[key][idx];\n        const items = [...state[key].slice(0, idx), ...state[key].slice(idx + 1)];\n        const destination = this.keys[this.keys.findIndex(item => item === key) + direction];\n        return {\n          [`${key}`]: items,\n          [`${destination}`]: [...state[destination], currentItem]\n        };\n      });\n    };\n\n    this.keys = Object.keys(this.state);\n  }\n\n  render() {\n    const elements = this.keys.map((key, index) => {\n      const first = index === 0;\n      const last = index === this.keys.length - 1;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        onMove: this.onMove,\n        items: this.state[key],\n        keyName: key,\n        first: first,\n        last: last\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this);\n    });\n    const routes = this.keys.map((key, index) => {\n      const first = index === 0;\n      const last = index === this.keys.length - 1;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: `/${key}`,\n        render: () => /*#__PURE__*/_jsxDEV(Grid, {\n          onMove: this.onMove,\n          items: this.state[key],\n          keyName: key,\n          first: first,\n          last: last\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this);\n    });\n    const links = this.keys.map((key, index) => {\n      let classNames = 'list-group-item';\n      if (document.URL.indexOf(key) > -1) classNames += ' active';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classNames,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${key}`,\n          children: [\" \", key, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"tab d-flex\",\n              children: links\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: routes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/React-apps/test-app/test-app/src/components/app/app.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","DataService","AppHeader","Grid","App","dataService","state","getData","onMove","id","key","direction","currentItem","setState","idx","findIndex","item","items","slice","destination","keys","Object","render","elements","map","index","first","last","length","routes","links","classNames","document","URL","indexOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport DataService from '../../services/data-service';\r\nimport AppHeader from '../header/header';\r\n\r\nimport Grid from '../grid/grid';\r\n\r\n\r\nimport './app.css';\r\n\r\n\r\nexport default class App extends Component {\r\n    dataService = new DataService();\r\n    \r\n    state = this.dataService.getData();\r\n\r\n    onMove = (id, key, direction) => {\r\n        let currentItem;\r\n\r\n        this.setState((state) => {\r\n            const idx = state[key].findIndex((item) => item.id === id);\r\n            currentItem = state[key][idx];\r\n\r\n            const items = [\r\n              ...state[key].slice(0, idx),\r\n              ...state[key].slice(idx + 1)\r\n            ];\r\n\r\n            const destination = this.keys[this.keys.findIndex((item) => item === key) + direction];\r\n            \r\n            return { [`${key}`] : items , [`${destination}`]: [...state[destination], currentItem]};\r\n          });    \r\n    };\r\n    \r\n    \r\n    keys = Object.keys(this.state);\r\n    \r\n    render() {\r\n        \r\n        const elements = this.keys.map((key, index) => {\r\n            const first = index === 0;\r\n            const last = index === this.keys.length -1;\r\n\r\n            return (\r\n                \r\n                <Grid \r\n                    onMove={this.onMove}\r\n                    items= {this.state[key]}\r\n                    key={key}\r\n                    keyName = {key}\r\n                    first = {first}\r\n                    last = {last}/>\r\n            );\r\n          });\r\n\r\n          const routes = this.keys.map((key, index) => {\r\n                const first = index === 0;\r\n                const last = index === this.keys.length -1;\r\n                \r\n                return <Route path={`/${key}`} render={() => <Grid \r\n                    onMove={this.onMove}\r\n                    items= {this.state[key]}\r\n                    key={key}\r\n                    keyName = {key}\r\n                    first = {first}\r\n                    last = {last}/>} />\r\n\r\n          });\r\n\r\n          const links = this.keys.map((key, index) => {\r\n\r\n            let classNames = 'list-group-item';\r\n            if(document.URL.indexOf(key)> -1 )  classNames += ' active';\r\n\r\n            return (\r\n                <li className={classNames} key={key} >\r\n                    <Link to={`/${key}`}> {key} </Link>\r\n                </li>\r\n            );\r\n\r\n          });\r\n\r\n\r\n        return  (\r\n        <div>\r\n         <AppHeader/>\r\n          <div className=\"row\">{elements}</div>  \r\n          <Router>\r\n            <div>\r\n                <div><ul className=\"tab d-flex\">{links}</ul></div>\r\n                <div className=\"row\">{routes}</div>\r\n            </div> \r\n          </Router>\r\n        </div>\r\n        );\r\n          \r\n      };\r\n}"]},"metadata":{},"sourceType":"module"}