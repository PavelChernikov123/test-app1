{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-apps\\\\test-app\\\\test-app\\\\src\\\\components\\\\app\\\\app.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport AppHeader from '../header';\nimport TabControl from '../tab-control';\nimport Grid from '../grid';\nimport { connect } from 'react-redux';\nimport { withDataService } from '../hoc';\nimport { fetchData, onMove } from '../../actions';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getMoveFunc = key => {\n      const keys = this.keys();\n      const idx = keys.findIndex(item => item === key);\n      const isLeft = idx === 0;\n      const isRight = idx === keys.length - 1;\n      return {\n        onMoveLeft: isLeft ? undefined : ids => this.props.onMove({\n          from: key,\n          to: keys[idx - 1],\n          ids\n        }),\n        onMoveRight: isRight ? undefined : ids => this.props.onMove({\n          from: key,\n          to: keys[idx + 1],\n          ids\n        })\n      };\n    };\n\n    this.keys = () => Object.keys(this.props.data) || [];\n  }\n\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  render() {\n    const data = this.props.data;\n    if (!data || data.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loadig...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 46\n    }, this);\n    const widgets = this.keys().map((key, index) => {\n      return /*#__PURE__*/_createElement(Grid, { ...this.getMoveFunc(key),\n        items: data[key],\n        key: key,\n        keyName: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      });\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [\" \", widgets, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/:name\",\n            render: ({\n              match: {\n                params: {\n                  name\n                }\n              }\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(TabControl, {\n                data: this.keys(),\n                name: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_createElement(Grid, { ...this.getMoveFunc(name),\n                items: data[name],\n                key: name,\n                keyName: name,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 25\n                }\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n            to: `/${this.keys()[0]}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({ ...props\n}) => ({ ...props\n});\n\nconst mapDispatchtoProps = (dispatch, {\n  dataService\n}) => ({\n  fetchData: fetchData(dataService, dispatch),\n  onMove: props => dispatch(onMove(props))\n});\n\nexport default withDataService()(connect(mapStateToProps, mapDispatchtoProps)(App));","map":{"version":3,"sources":["C:/React-apps/test-app/test-app/src/components/app/app.js"],"names":["React","Component","BrowserRouter","Router","Route","Redirect","Switch","AppHeader","TabControl","Grid","connect","withDataService","fetchData","onMove","App","getMoveFunc","key","keys","idx","findIndex","item","isLeft","isRight","length","onMoveLeft","undefined","ids","props","from","to","onMoveRight","Object","data","componentDidMount","render","widgets","map","index","match","params","name","mapStateToProps","mapDispatchtoProps","dispatch","dataService"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAuC,OAAvC;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,QAHF,EAIEC,MAJF,QAKuC,kBALvC;AAMA,OAAOC,SAAP,MAAuC,WAAvC;AACA,OAAOC,UAAP,MAAuC,gBAAvC;AACA,OAAOC,IAAP,MAAuC,SAAvC;AACA,SAASC,OAAT,QAAuC,aAAvC;AACA,SAASC,eAAT,QAAuC,QAAvC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAuC,eAAvC;AACA,OAAO,WAAP;;;;AAEC,MAAMC,GAAN,SAAkBb,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAKzBc,WALyB,GAKXC,GAAG,IAAI;AACnB,YAAMC,IAAI,GAAG,KAAKA,IAAL,EAAb;AACA,YAAMC,GAAG,GAAGD,IAAI,CAACE,SAAL,CAAeC,IAAI,IAAIA,IAAI,KAAKJ,GAAhC,CAAZ;AACA,YAAMK,MAAM,GAAGH,GAAG,KAAK,CAAvB;AACA,YAAMI,OAAO,GAAGJ,GAAG,KAAKD,IAAI,CAACM,MAAL,GAAc,CAAtC;AACA,aAAQ;AACNC,QAAAA,UAAU,EAAGH,MAAM,GAAKI,SAAL,GAAiBC,GAAG,IAAI,KAAKC,KAAL,CAAWd,MAAX,CAAmB;AAAEe,UAAAA,IAAI,EAAGZ,GAAT;AAAca,UAAAA,EAAE,EAAGZ,IAAI,CAACC,GAAG,GAAC,CAAL,CAAvB;AAAgCQ,UAAAA;AAAhC,SAAnB,CADrC;AAENI,QAAAA,WAAW,EAAER,OAAO,GAAIG,SAAJ,GAAgBC,GAAG,IAAI,KAAKC,KAAL,CAAWd,MAAX,CAAmB;AAAEe,UAAAA,IAAI,EAAGZ,GAAT;AAAca,UAAAA,EAAE,EAAGZ,IAAI,CAACC,GAAG,GAAC,CAAL,CAAvB;AAAgCQ,UAAAA;AAAhC,SAAnB;AAFrC,OAAR;AAID,KAdwB;;AAAA,SAgBzBT,IAhByB,GAgBlB,MAAOc,MAAM,CAACd,IAAP,CAAY,KAAKU,KAAL,CAAWK,IAAvB,KAAgC,EAhBrB;AAAA;;AACzBC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,KAAL,CAAWf,SAAX;AACD;;AAeDsB,EAAAA,MAAM,GAAG;AACL,UAAMF,IAAI,GAAG,KAAKL,KAAL,CAAWK,IAAxB;AACA,QAAG,CAACA,IAAD,IAASA,IAAI,CAACT,MAAL,KAAe,CAA3B,EAA8B,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAE9B,UAAMY,OAAO,GAAG,KAAKlB,IAAL,GAAYmB,GAAZ,CAAgB,CAACpB,GAAD,EAAMqB,KAAN,KAAgB;AAC5C,0BACE,eAAC,IAAD,OACS,KAAKtB,WAAL,CAAiBC,GAAjB,CADT;AAEI,QAAA,KAAK,EAAKgB,IAAI,CAAChB,GAAD,CAFlB;AAGI,QAAA,GAAG,EAAKA,GAHZ;AAII,QAAA,OAAO,EAAKA,GAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD,KATa,CAAhB;AAWA,wBACA;AAAA,8BACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADD,eAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,wBAAwBmB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAA,+BACE,QAAC,MAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,MAAM,EAAG,CAAC;AAAEG,cAAAA,KAAK,EAAE;AAAEC,gBAAAA,MAAM,EAAE;AAAEC,kBAAAA;AAAF;AAAV;AAAT,aAAD,kBAC1B;AAAA,sCACI,QAAC,UAAD;AAAY,gBAAA,IAAI,EAAG,KAAKvB,IAAL,EAAnB;AAAiC,gBAAA,IAAI,EAAKuB;AAA1C;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,eAAC,IAAD,OACS,KAAKzB,WAAL,CAAiByB,IAAjB,CADT;AAEI,gBAAA,KAAK,EAAIR,IAAI,CAAEQ,IAAF,CAFjB;AAGI,gBAAA,GAAG,EAAGA,IAHV;AAII,gBAAA,OAAO,EAAKA,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAYI,QAAC,QAAD;AAAU,YAAA,EAAE,EAAI,IAAG,KAAKvB,IAAL,GAAY,CAAZ,CAAe;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAuBD;;AAxDsB;;AA2D7B,MAAMwB,eAAe,GAAG,CAAE,EAAC,GAAGd;AAAJ,CAAF,MAAkB,EAAC,GAAGA;AAAJ,CAAlB,CAAxB;;AACA,MAAMe,kBAAkB,GAAG,CAACC,QAAD,EAAW;AAAEC,EAAAA;AAAF,CAAX,MACvB;AACIhC,EAAAA,SAAS,EAAEA,SAAS,CAACgC,WAAD,EAAcD,QAAd,CADxB;AAEI9B,EAAAA,MAAM,EAAEc,KAAK,IAAIgB,QAAQ,CAAC9B,MAAM,CAACc,KAAD,CAAP;AAF7B,CADuB,CAA3B;;AAOA,eAAehB,eAAe,GAC5BD,OAAO,CAAC+B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C5B,GAA7C,CAD4B,CAA9B","sourcesContent":["import React, { Component }       from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n}                                 from 'react-router-dom'\r\nimport AppHeader                  from '../header'\r\nimport TabControl                 from '../tab-control'\r\nimport Grid                       from '../grid'\r\nimport { connect }                from 'react-redux'\r\nimport { withDataService }        from '../hoc'\r\nimport { fetchData, onMove }      from '../../actions'\r\nimport './app.css'\r\n\r\n class App extends Component {\r\n    componentDidMount() {\r\n      this.props.fetchData()\r\n    }\r\n    \r\n    getMoveFunc = key => {\r\n      const keys = this.keys()\r\n      const idx = keys.findIndex(item => item === key)\r\n      const isLeft = idx === 0\r\n      const isRight = idx === keys.length - 1\r\n      return  {\r\n        onMoveLeft:  isLeft   ? undefined : ids => this.props.onMove( { from : key, to : keys[idx-1], ids } ),\r\n        onMoveRight: isRight  ? undefined : ids => this.props.onMove( { from : key, to : keys[idx+1], ids } )\r\n      }\r\n    }\r\n    \r\n    keys = () => (Object.keys(this.props.data) || [])\r\n    \r\n    render() {\r\n        const data = this.props.data\r\n        if(!data || data.length ===0) return <div>Loadig...</div>;\r\n        \r\n        const widgets = this.keys().map((key, index) => {\r\n            return ( \r\n              <Grid \r\n                  {... this.getMoveFunc(key) }\r\n                  items = { data[key] }\r\n                  key = { key }\r\n                  keyName = { key }\r\n                />\r\n            )\r\n          })\r\n     \r\n        return  (\r\n        <div>\r\n         <AppHeader/>\r\n          <div className=\"row\"> { widgets } </div>  \r\n          <Router>\r\n            <Switch>\r\n                <Route path=\"/:name\" render={ ({ match: { params: { name } } } ) =>\r\n                    <div>\r\n                        <TabControl data={ this.keys() } name = { name }></TabControl>\r\n                        <Grid \r\n                            {... this.getMoveFunc(name)}\r\n                            items= { data[ name ] }\r\n                            key={ name }\r\n                            keyName = { name }\r\n                        />\r\n                    </div>\r\n                  }/>\r\n                <Redirect to={ `/${this.keys()[0]}` } />\r\n            </Switch> \r\n          </Router>\r\n        </div>\r\n        )\r\n          \r\n      }\r\n}\r\n\r\nconst mapStateToProps = ( {...props}) => ({...props} )\r\nconst mapDispatchtoProps = (dispatch, { dataService }) =>  (\r\n    {\r\n        fetchData: fetchData(dataService, dispatch),\r\n        onMove: props => dispatch(onMove(props))\r\n    }\r\n)\r\n\r\nexport default withDataService()(\r\n  connect(mapStateToProps, mapDispatchtoProps)(App)\r\n  )"]},"metadata":{},"sourceType":"module"}