{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-apps\\\\test-app\\\\test-app\\\\src\\\\components\\\\app\\\\app.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport DataService from '../../services/data-service';\nimport AppHeader from '../header';\nimport TabControl from '../tab-control';\nimport Grid from '../grid';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.dataService = new DataService();\n    this.state = this.dataService.getData();\n\n    this.onMove = (id, key, direction) => {\n      let currentItem;\n      this.setState(state => {\n        const idx = state[key].findIndex(item => item.id === id);\n        currentItem = state[key][idx];\n        const items = [...state[key].slice(0, idx), ...state[key].slice(idx + 1)];\n        const destination = this.keys()[this.keys().findIndex(item => item === key) + direction];\n        return {\n          [key]: items,\n          [destination]: [...state[destination], currentItem]\n        };\n      });\n    };\n\n    this.keys = () => Object.keys(this.state);\n  }\n\n  render() {\n    const elements = this.keys().map((key, index) => {\n      const first = index === 0;\n      const last = index === this.keys().length - 1;\n      const onMoveLeft = first ? undefined : () => {\n        onMove(id, keyName, -1);\n      };\n      const onMoveRight = last ? undefined : () => {\n        onMove(id, keyName, 1);\n      };\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        onMoveLeft: this.onMoveLeft,\n        onMoveRight: this.onMoveRight,\n        items: this.state[key],\n        keyName: key\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    });\n    const routes = this.keys().map((key, index) => {\n      const first = index === 0;\n      const last = index === this.keys().length - 1;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: `/${key}`,\n        exact: true,\n        render: () => /*#__PURE__*/_jsxDEV(Grid, {\n          onMove: this.onMove,\n          items: this.state[key],\n          keyName: key,\n          first: first,\n          last: last\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 78\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 24\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TabControl, {\n            data: this.keys()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: routes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/React-apps/test-app/test-app/src/components/app/app.js"],"names":["React","Component","BrowserRouter","Router","Route","DataService","AppHeader","TabControl","Grid","App","dataService","state","getData","onMove","id","key","direction","currentItem","setState","idx","findIndex","item","items","slice","destination","keys","Object","render","elements","map","index","first","last","length","onMoveLeft","undefined","keyName","onMoveRight","routes"],"mappings":"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","sourcesContent":["import React, { Component }               from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport DataService                        from '../../services/data-service'\r\nimport AppHeader                          from '../header'\r\nimport TabControl                         from '../tab-control'\r\nimport Grid                               from '../grid'\r\n\r\n\r\nimport './app.css'\r\n\r\n\r\nexport default class App extends Component {\r\n    dataService = new DataService()\r\n    \r\n    state = this.dataService.getData()\r\n\r\n    onMove = (id, key, direction) => {\r\n        let currentItem\r\n\r\n        this.setState((state) => {\r\n            const idx = state[key].findIndex((item) => item.id === id)\r\n            currentItem = state[key][idx]\r\n\r\n            const items = [\r\n              ...state[key].slice(0, idx),\r\n              ...state[key].slice(idx + 1)\r\n            ]\r\n\r\n            const destination = this.keys()[this.keys().findIndex((item) => item === key) + direction]\r\n            \r\n            return { \r\n              [key] : items , \r\n              [destination]: [...state[destination], currentItem]\r\n            }\r\n          })    \r\n    }\r\n    \r\n    \r\n    keys = () => (Object.keys(this.state))\r\n    \r\n    render() {\r\n        \r\n        const elements = this.keys().map((key, index) => {\r\n            const first = index === 0\r\n            const last = index === this.keys().length -1\r\n            const onMoveLeft = first ? undefined : () => {onMove(id, keyName, -1)}\r\n            const onMoveRight = last ? undefined : () => {onMove(id, keyName, 1)}\r\n            return (\r\n                \r\n                <Grid \r\n                    onMoveLeft={this.onMoveLeft}\r\n                    onMoveRight={this.onMoveRight}\r\n                    items= {this.state[key]}\r\n                    key={key}\r\n                    keyName = {key}/>\r\n            )\r\n          })\r\n\r\n          const routes = this.keys().map((key, index) => {\r\n                const first = index === 0\r\n                const last = index === this.keys().length -1\r\n                \r\n                return <Route path={`/${key}`} exact key={key} render={() => <Grid \r\n                    onMove={this.onMove}\r\n                    items= {this.state[key]}\r\n                    key={key}\r\n                    keyName = {key}\r\n                    first = {first}\r\n                    last = {last}/>} />\r\n\r\n          })\r\n\r\n        return  (\r\n        <div>\r\n         <AppHeader/>\r\n          <div className=\"row\">{elements}</div>  \r\n          <Router>\r\n            <div>\r\n                <TabControl data={this.keys()}></TabControl>\r\n                <div className=\"row\">{routes}</div>\r\n            </div> \r\n          </Router>\r\n        </div>\r\n        )\r\n          \r\n      }\r\n}"]},"metadata":{},"sourceType":"module"}