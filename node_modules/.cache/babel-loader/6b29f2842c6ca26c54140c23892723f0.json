{"ast":null,"code":"import actionType from \"../actions/action-type\";\nconst initialState = {\n  data: []\n};\n\nconst onMove = (state, payload) => {\n  const {\n    ids,\n    from,\n    to\n  } = payload;\n  const {\n    data\n  } = state;\n  let updated = data;\n  ids.map(id => {\n    const idx = updated[from].findIndex(item => item.id === id);\n    const currentItem = updated[from][idx];\n    updated = { ...updated,\n      [from]: [...updated[from].slice(0, idx), ...updated[from].slice(idx + 1)],\n      [to]: [...updated[to], currentItem]\n    };\n    return true;\n  });\n  return {\n    data: updated\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.FETCH_DATA:\n      return {\n        state\n      };\n\n    case actionType.FETCH_DATA_SUCCESS:\n      return {\n        data: action.payload\n      };\n\n    case actionType.FETCH_DATA_ERROR:\n      return {\n        state\n      };\n\n    case actionType.MOVE_ITEM:\n      return onMove(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/React-apps/test-app/test-app/src/reducers/index.js"],"names":["actionType","initialState","data","onMove","state","payload","ids","from","to","updated","map","id","idx","findIndex","item","currentItem","slice","reducer","action","type","FETCH_DATA","FETCH_DATA_SUCCESS","FETCH_DATA_ERROR","MOVE_ITEM"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,wBAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB;;AAIA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC/B,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA;AAAb,MAAoBH,OAA1B;AACA,QAAM;AAAEH,IAAAA;AAAF,MAAWE,KAAjB;AACA,MAAIK,OAAO,GAAGP,IAAd;AACAI,EAAAA,GAAG,CAACI,GAAJ,CAASC,EAAD,IAAQ;AACd,UAAMC,GAAG,GAAGH,OAAO,CAACF,IAAD,CAAP,CAAcM,SAAd,CAAyBC,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYA,EAA9C,CAAZ;AACA,UAAMI,WAAW,GAAGN,OAAO,CAACF,IAAD,CAAP,CAAcK,GAAd,CAApB;AACAH,IAAAA,OAAO,GAAI,EACL,GAAGA,OADE;AAEL,OAACF,IAAD,GAAQ,CACR,GAAGE,OAAO,CAACF,IAAD,CAAP,CAAcS,KAAd,CAAoB,CAApB,EAAuBJ,GAAvB,CADK,EAER,GAAGH,OAAO,CAACF,IAAD,CAAP,CAAcS,KAAd,CAAoBJ,GAAG,GAAG,CAA1B,CAFK,CAFH;AAML,OAACJ,EAAD,GAAM,CAAC,GAAGC,OAAO,CAACD,EAAD,CAAX,EAAiBO,WAAjB;AAND,KAAX;AAQA,WAAO,IAAP;AACD,GAZD;AAcA,SAAO;AAAEb,IAAAA,IAAI,EAAGO;AAAT,GAAP;AACH,CAnBD;;AAuBE,MAAMQ,OAAO,GAAG,CAACb,KAAK,GAAGH,YAAT,EAAuBiB,MAAvB,KAAkC;AAEhD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKnB,UAAU,CAACoB,UAAhB;AACI,aAAO;AACHhB,QAAAA;AADG,OAAP;;AAGJ,SAAKJ,UAAU,CAACqB,kBAAhB;AACI,aAAO;AACHnB,QAAAA,IAAI,EAAEgB,MAAM,CAACb;AADV,OAAP;;AAGJ,SAAKL,UAAU,CAACsB,gBAAhB;AACI,aAAO;AACHlB,QAAAA;AADG,OAAP;;AAGJ,SAAKJ,UAAU,CAACuB,SAAhB;AACI,aAAQpB,MAAM,CAACC,KAAD,EAAQc,MAAM,CAACb,OAAf,CAAd;;AAEJ;AACI,aAAOD,KAAP;AAjBR;AAmBD,CArBD;;AAuBA,eAAea,OAAf","sourcesContent":["import actionType from \"../actions/action-type\"\r\n\r\nconst initialState = {\r\n    data: []    \r\n}\r\n    \r\nconst onMove = (state, payload) => {\r\n    const { ids, from, to } = payload\r\n    const { data } = state\r\n    let updated = data;\r\n    ids.map((id) => {\r\n      const idx = updated[from].findIndex((item) => item.id === id)\r\n      const currentItem = updated[from][idx]\r\n      updated =  {\r\n            ...updated,\r\n            [from] :[\r\n            ...updated[from].slice(0, idx),\r\n            ...updated[from].slice(idx + 1)\r\n            ] , \r\n            [to]: [...updated[to], currentItem]\r\n      }\r\n      return true\r\n    })\r\n\r\n    return { data : updated }\r\n}\r\n\r\n  \r\n\r\n  const reducer = (state = initialState, action) => {\r\n  \r\n    switch (action.type) {\r\n        case actionType.FETCH_DATA:\r\n            return {\r\n                state\r\n            }\r\n        case actionType.FETCH_DATA_SUCCESS:\r\n            return {\r\n                data: action.payload,\r\n            }\r\n        case actionType.FETCH_DATA_ERROR:\r\n            return {\r\n                state\r\n            }\r\n        case actionType.MOVE_ITEM:\r\n            return  onMove(state, action.payload)\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n  }\r\n  \r\n  export default reducer"]},"metadata":{},"sourceType":"module"}